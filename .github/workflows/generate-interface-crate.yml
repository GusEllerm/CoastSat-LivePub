name: Generate Interface Crate

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  build-interface-crate:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout this repo with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0  # Ensures full commit history is cloned

      - name: Set up Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: coastsat_stencila_env
          environment-file: environment.yaml
          python-version: "3.10"

      - name: Export GitHub Gist token
        run: echo "GITHUB_TOKEN=${{ secrets.GH_GIST_TOKEN }}" >> $GITHUB_ENV

      - name: Generate Interface Crate
        run: |
          conda run -n coastsat_stencila_env python LP_Crate/interface_crate.py 

      - name: Patch release URL into interface.crate
        run: |
          # Temporarily 
          echo "RELEASE_NAME=placeholder" >> $GITHUB_ENV
          echo "RELEASE_URL=placeholder" >> $GITHUB_ENV

      - name: Zip interface crate
        run: (cd LP_Crate && zip -r ../interface-crate.zip interface.crate/)

      - name: Install GitHub CLI
        run: sudo apt-get install gh

      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "$GH_TOKEN" | gh auth login --with-token

      - name: Set release name
        id: set_release_name
        run: |
          COMMIT_ID=$(git -C CoastSat rev-parse --short HEAD)
          DATE=$(date +"%Y%m%d%H%M%S")
          echo "RELEASE_NAME=interface.crate-${COMMIT_ID}-${DATE}" >> $GITHUB_ENV

      - name: Create release with CoastSat commit ID
        run: |
          gh release create "${RELEASE_NAME}" --title "Interface Crate (${RELEASE_NAME})" --notes "Autogenerated from CoastSat commit"

      - name: Patch release URL into interface.crate
        run: |
          RELEASE_URL="https://github.com/${{ github.repository }}/releases/tag/${RELEASE_NAME}"
           conda run -n coastsat_stencila_env python LP_Crate/patch_release_url.py "$RELEASE_URL"

      - name: Re-zip patched interface crate
        run: (cd LP_Crate && zip -r ../interface-crate.zip interface.crate/)

      - name: Upload crate to release
        run: |
          gh release upload "${RELEASE_NAME}" interface-crate.zip --clobber